require('dotenv').config();
const express = require('express');
const cors = require('cors');
const app = express();
const dns = require('dns')
const shortid = require('shortid')
const bodyParser = require('body-parser')
let urls = {}

// Basic Configuration
const port = process.env.PORT || 3000;
// Use body-parser middleware to parse JSON bodies
app.use(bodyParser.json());

// Use body-parser middleware to parse URL-encoded bodies
app.use(bodyParser.urlencoded({ extended: true }));
app.use(cors());

app.use('/public', express.static(`${process.cwd()}/public`));





app.get('/', function(req, res) {
  res.sendFile(process.cwd() + '/views/index.html');
});

// Your first API endpoint
app.get('/api/hello', function(req, res) {
  res.json({ greeting: 'hello API' });
});
app.post("/api/shorturl", (req,res)=>{
  const originalURL = req.body.url
  let modifiedURL = originalURL.replace(/^https?:\/\//, '');
    // Check if the URL is valid
    if (originalURL.startsWith("http") == false) {
      return res.json({ error: 'Invalid URL' });
    }
    for (let i in urls) {
      if (urls[i] === originalURL) {
        return res.send({ original_url: originalURL, short_url: i });
      }
    }

   let shortURL = shortid.generate();
   urls[shortURL] = originalURL;
   res.json({original_url: originalURL, short_url: shortURL})
 

  });
  app.get('/api/shorturl/:shorturl', (req, res) => {
    const shortURL = req.params.shorturl;
  
    if (shortURL in urls) {
      return res.redirect(urls[shortURL]);
    } else {
      return res.status(404).send('URL not found');
    }
  });
  
app.listen(port, function() {
  console.log(`Listening on port ${port}`);
});
